using System.Collections.Generic;

namespace VaultScope.Core.Constants;

public static class VulnerabilityTypes
{
    public const string SqlInjection = "SQL_INJECTION";
    public const string CrossSiteScripting = "XSS";
    public const string XmlExternalEntity = "XXE";
    public const string CommandInjection = "COMMAND_INJECTION";
    public const string PathTraversal = "PATH_TRAVERSAL";
    public const string AuthenticationBypass = "AUTH_BYPASS";
    public const string BrokenAccessControl = "BROKEN_ACCESS_CONTROL";
    public const string SecurityMisconfiguration = "SECURITY_MISCONFIGURATION";
    public const string SensitiveDataExposure = "SENSITIVE_DATA_EXPOSURE";
    public const string MissingSecurityHeaders = "MISSING_SECURITY_HEADERS";
    public const string InsecureDeserialization = "INSECURE_DESERIALIZATION";
    public const string ServerSideRequestForgery = "SSRF";
    public const string RateLimiting = "RATE_LIMITING";
    
    public static readonly Dictionary<string, string> Descriptions = new()
    {
        [SqlInjection] = "SQL Injection vulnerability allows attackers to interfere with database queries",
        [CrossSiteScripting] = "Cross-Site Scripting (XSS) allows attackers to inject malicious scripts",
        [XmlExternalEntity] = "XML External Entity (XXE) allows attackers to access internal files",
        [CommandInjection] = "Command Injection allows execution of arbitrary system commands",
        [PathTraversal] = "Path Traversal allows unauthorized access to files and directories",
        [AuthenticationBypass] = "Authentication Bypass allows unauthorized access to protected resources",
        [BrokenAccessControl] = "Broken Access Control allows users to act outside intended permissions",
        [SecurityMisconfiguration] = "Security Misconfiguration exposes the application to various attacks",
        [SensitiveDataExposure] = "Sensitive Data Exposure reveals confidential information",
        [MissingSecurityHeaders] = "Missing Security Headers leave the application vulnerable",
        [InsecureDeserialization] = "Insecure Deserialization can lead to remote code execution",
        [ServerSideRequestForgery] = "SSRF allows attackers to make requests from the server",
        [RateLimiting] = "Missing or weak rate limiting allows abuse and denial of service"
    };
    
    public static readonly Dictionary<string, string> CweIds = new()
    {
        [SqlInjection] = "CWE-89",
        [CrossSiteScripting] = "CWE-79",
        [XmlExternalEntity] = "CWE-611",
        [CommandInjection] = "CWE-78",
        [PathTraversal] = "CWE-22",
        [AuthenticationBypass] = "CWE-287",
        [BrokenAccessControl] = "CWE-284",
        [SecurityMisconfiguration] = "CWE-16",
        [SensitiveDataExposure] = "CWE-200",
        [MissingSecurityHeaders] = "CWE-693",
        [InsecureDeserialization] = "CWE-502",
        [ServerSideRequestForgery] = "CWE-918",
        [RateLimiting] = "CWE-770"
    };
}