name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Install WiX Toolset
      run: |
        choco install wixtoolset -y
        echo "C:\Program Files (x86)\WiX Toolset v3.11\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Build with Maven and create EXE installer
      run: mvn clean package -Pjpackage -Djpackage.type=exe -DskipTests

    - name: Build MSI installer
      run: mvn package -Pjpackage -Djpackage.type=msi -DskipTests

    - name: List build artifacts
      run: |
        echo "Build artifacts:"
        dir target\dist\ || echo "No dist directory found"

    - name: Upload Windows EXE
      uses: actions/upload-artifact@v4
      with:
        name: vaultscope-windows-exe
        path: target/dist/VaultScope-*.exe

    - name: Upload Windows MSI
      uses: actions/upload-artifact@v4
      with:
        name: vaultscope-windows-msi
        path: target/dist/VaultScope-*.msi

    - name: Upload JAR
      uses: actions/upload-artifact@v4
      with:
        name: vaultscope-jar
        path: target/vaultscope-*.jar

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven and create DEB package
      run: mvn clean package -Pjpackage -Djpackage.type=deb -DskipTests

    - name: List build artifacts
      run: |
        echo "Build artifacts:"
        ls -la target/dist/ || echo "No dist directory found"

    - name: Upload Linux DEB
      uses: actions/upload-artifact@v4
      with:
        name: vaultscope-linux-deb
        path: target/dist/vaultscope_*.deb

  release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: List downloaded artifacts
      run: |
        find artifacts -type f -name "*" | sort

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name || format('v{0}', github.event.inputs.version) }}
        name: VaultScope ${{ github.ref_name || format('v{0}', github.event.inputs.version) }}
        body: |
          ## VaultScope - Enterprise API Security Assessment Tool
          
          ### üöÄ Features
          - Comprehensive authentication testing (JWT, OAuth 2.0, API Keys, Basic Auth)
          - Advanced security vulnerability detection
          - Professional reporting with CWE references
          - Support for 20+ authentication vulnerability types
          - Production-ready security testing framework
          
          ### üì¶ Downloads
          - **Windows EXE**: Standalone installer for Windows 10/11
          - **Windows MSI**: Enterprise deployment package
          - **Linux DEB**: Ubuntu/Debian package
          - **JAR**: Cross-platform (requires Java 17+)
          
          ### üîß Installation
          - **Windows**: Download and run the .exe or .msi file
          - **Linux**: Download and install with `sudo dpkg -i vaultscope-*.deb`
          - **Cross-platform**: Download JAR and run with `java -jar vaultscope-*.jar`
          
          ### üõ°Ô∏è Security
          - Designed for localhost API testing only
          - No malicious code - defensive security testing
          - Follow responsible disclosure practices
          
          ### üìñ Documentation
          - Setup instructions: See SETUP.md in repository
          - GitHub: https://github.com/cptcr/vaultscope
          - License: Apache License 2.0
        files: |
          artifacts/vaultscope-windows-exe/VaultScope-*.exe
          artifacts/vaultscope-windows-msi/VaultScope-*.msi
          artifacts/vaultscope-linux-deb/vaultscope_*.deb
          artifacts/vaultscope-jar/vaultscope-*.jar
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}